name:                call-alloy
version:             0.5.0.1
github:              "marcellussiegburg/call-alloy"
license:             MIT
author:              "Marcellus Siegburg"
maintainer:          "marcellus.siegburg@uni-due.de"
copyright:           "2019-2024 Marcellus Siegburg"

data-dir: data
data-files:
- alloy/RunAlloy.class
- alloy/SATSolver.class
- org.alloytools.alloy.dist.jar
- commons-cli/commons-cli-1.5.0.jar
- commons-cli/NOTICE.txt
- commons-cli/LICENSE.txt
- slf4j/slf4j-simple-1.7.36.jar
- slf4j/LICENSE
extra-source-files:
- README.md
- LICENSE
- ChangeLog.md
- test/unit/readmeExampleInstance.hs
- test/unit/readmeExampleResult.hs
- test/unit/readmeExampleSpecification.als
ghc-options:
  - -Wall
  - -Wincomplete-uni-patterns
  - -Wincomplete-record-updates
  - -Widentities
  - -Wredundant-constraints

synopsis:            A simple library to call Alloy given a specification
category:            Language

description:         Please see the README on GitHub at <https://github.com/marcellussiegburg/call-alloy#readme>

dependencies:
- async                       >= 2.2.1 && < 2.3
- base                        >= 4.12 && < 5
- bytestring                  >= 0.10.4 && < 0.13
- containers                  >= 0.6 && < 0.8
- directory                   >= 1.3 && < 1.4
- exceptions                  >= 0.8.1 && < 0.11
- extra                       >= 1.7 && < 1.9
- filepath                    >= 1.4 && < 1.6
- process                     >= 1.6 && < 1.7
- split                       >= 0.2 && < 0.3
- transformers                >= 0.5.0.0 && < 0.7
- trifecta                    >= 2 && < 2.2
when:
- condition: os(windows)
  then:
    cpp-options: -DWINDOWS
    dependencies:
    - Win32                   >= 2.5 && < 2.15
  else:
    dependencies:
    - unix                    >= 2.7 && < 2.9

flags:
  test-different-solvers:
    description: During tests different solvers are called to test if they are working on the current system
    manual: true
    default: false

library:
  source-dirs: src
  exposed-modules:
    - Language.Alloy.Call
    - Language.Alloy.Debug
    - Language.Alloy.Exceptions

tests:
  call-alloy-test:
    main:                Spec.hs
    source-dirs:
    - src
    - test
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - call-alloy
    - file-embed
    - hspec
    - string-interpolate
    when:
      condition: flag(test-different-solvers)
      cpp-options: -DTEST_DIFFERENT_SOLVERS
